name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Important: ensure full history for semantic-release

    - name: Use Node (needed for semantic-release)
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install semantic-release
      run: npm install semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github @semantic-release/exec

    - name: Run semantic-release to determine version
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Or use GITHUB_TOKEN if you prefer
      run: |
        npx semantic-release --dry-run > semver.txt
        VERSION=$(grep -oP 'Release note for version \K[^ ]+' semver.txt | tail -1)
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build Docker image
      run: docker build -t platof/argocd-test-app:${VERSION} .

    - name: Login to Docker
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push platof/argocd-test-app:${VERSION}

    - name: Update Kustomize manifest
      run: |
        sed -i "s|image: platof/argocd-test-app:.*|image: platof/argocd-test-app:${VERSION}|g" k8s/base/deployment.yaml
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add k8s/base/deployment.yaml
        git commit -m "Update image tag to $VERSION"
        git push
